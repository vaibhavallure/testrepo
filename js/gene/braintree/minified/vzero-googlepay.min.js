var vZeroGooglePay=Class.create({initialize:function(t,e,n,o,i){this.clientToken=t||!1,this.storeName=e,this.integration=n||!1,this.clientTokenUrl=o,this.additionalOptions=i,this.vzero=this.integration.vzero||!1,this.methodCode="gene_braintree_googlepay",this.client=!1,this.paymentsClient=null,this.integration&&this.bindEvents(),$$("body").first()&&$$("body").first().addClassName("supports-google-pay")},bindEvents:function(){this.vzero.observeEvent("integration.onInitDefaultMethod",this.onInitDefaultMethod,this),this.vzero.observeEvent("onAfterUpdateData",this.onAfterUpdateData,this),this.integration.isOnepage?(this.vzero.observeEvent("integration.onPaymentMethodSwitch",this.onPaymentMethodSwitch,this),this.vzero.observeEvent("integration.onObserveAjaxRequests",this.onObserveAjaxRequests,this)):this.vzero.observeEvent("integration.onReviewInit",this.onReviewInit,this)},onInitDefaultMethod:function(t,e){return e._updateButton()},onAfterUpdateData:function(t,e){return void 0!==t.grandTotal&&t.grandTotal&&(e.amount=t.grandTotal),e._updateButton()},onPaymentMethodSwitch:function(t,e){return e._updateButton()},onObserveAjaxRequests:function(t,e){return e._updateButton()},onReviewInit:function(t,e){return e._updateButton()},isGooglePayActive:function(){return!this.integration||this.integration.getPaymentMethod()===this.methodCode},_updateButton:function(){this.isGooglePayActive()?this.addButton():this.hideButton()},addButton:function(){this.isGooglePayActive()&&this.attachGooglePayEvent()},hideButton:function(){this.button&&this.button.hide()},attachGooglePayEvent:function(){var e=this.additionalOptions.merchantAccountId,i=this.additionalOptions.currencyCode,r=this.additionalOptions.allowedCardNetworks;this.getClient(function(t){braintree.googlePayment.create({client:t,googlePayVersion:2,googleMerchantId:e},function(t,n){if(t)console.error("Error creating google pay instance:",t);else{var o=this.getGooglePaymentsClient();o.isReadyToPay({apiVersion:2,apiVersionMinor:0,allowedPaymentMethods:n.createPaymentDataRequest().allowedPaymentMethods}).then(function(t){if(t.result){var e=o.createButton({onClick:function(){var t=n.createPaymentDataRequest({transactionInfo:{currencyCode:i,totalPriceStatus:"ESTIMATED",totalPrice:this.vzero.amount},allowedPaymentMethods:[{type:"CARD",parameters:{allowedCardNetworks:r,billingAddressRequired:!0,billingAddressParameters:{format:"MIN",phoneNumberRequired:!0}}}],emailRequired:!0,shippingAddressRequired:!0});o.loadPaymentData(t).then(function(t){return t,n.parseResponse(t)}).then(function(t){$("googlepay-payment-nonce").value=t.nonce,this.vzero.integration.submitCheckout()}.bind(this)).catch(function(t){console.error(t)})}.bind(this)});e&&($$("#review-buttons-container .btn-checkout").first().hide(),document.getElementById("review-buttons-container").append(e))}}).catch(function(t){console.error(t)})}}.bind(this))}.bind(this))},getGooglePaymentsClient:function(){var t=this.additionalOptions.environment;return null===this.paymentsClient&&(this.paymentsClient=new google.payments.api.PaymentsClient({environment:"sandbox"===t?"TEST":"PRODUCTION"})),this.paymentsClient},getClient:function(n){!1!==this.client?"function"==typeof n&&n(this.client):this.getClientToken(function(t){braintree.client.create({authorization:t},function(t,e){t?console.error(t):(this.client=e,n(this.client))}.bind(this))})},getClientToken:function(n){return!1!==this.clientToken?n(this.clientToken):window.braintreeClientToken?n(window.braintreeClientToken):void new Ajax.Request(this.clientTokenUrl,{method:"get",onSuccess:function(t){if(t&&(t.responseJSON||t.responseText)){var e=this._parseTransportAsJson(t);if(!0===e.success&&"string"==typeof e.client_token)return this.clientToken=e.client_token,window.braintreeClientToken=e.client_token,n(this.clientToken);console.error("We were unable to retrieve a client token from the server to initialize the Braintree flow."),e.error&&console.error(e.error)}}.bind(this),onFailure:function(){console.error("We were unable to retrieve a client token from the server to initialize the Braintree flow.")}.bind(this)})},_parseTransportAsJson:function(transport){return transport.responseJSON&&"object"==typeof transport.responseJSON?transport.responseJSON:transport.responseText?"object"==typeof JSON&&"function"==typeof JSON.parse?JSON.parse(transport.responseText):eval("("+transport.responseText+")"):{}}});