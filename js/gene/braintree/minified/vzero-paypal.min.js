var vZeroPayPalButton=Class.create();vZeroPayPalButton.prototype={initialize:function(t,e,n,i,o,r,a,s){this.clientToken=t||!1,this.clientTokenUrl=a,this.storeFrontName=e,this.singleUse=n,this.locale=i,this.additionalOptions=s,this.amount=0,this.currency=!1,this.client=!1,this.onlyVaultOnVault=r||!1},getClientToken:function(n){return!1!==this.clientToken?n(this.clientToken):window.braintreeClientToken?n(window.braintreeClientToken):void new Ajax.Request(this.clientTokenUrl,{method:"get",onSuccess:function(t){if(t&&(t.responseJSON||t.responseText)){var e=this._parseTransportAsJson(t);if(1==e.success&&"string"==typeof e.client_token)return this.clientToken=e.client_token,window.braintreeClientToken=e.client_token,n(this.clientToken);console.error("We were unable to retrieve a client token from the server to initialize the Braintree flow."),e.error&&console.error(e.error)}}.bind(this),onFailure:function(){console.error("We were unable to retrieve a client token from the server to initialize the Braintree flow.")}.bind(this)})},getClient:function(n){!1!==this.client?"function"==typeof n&&n(this.client):this.getClientToken(function(t){braintree.client.create({authorization:t},function(t,e){t?console.error(t):(this.client=e,n(this.client))}.bind(this))})},setPricing:function(t,e){this.amount=parseFloat(t),this.currency=e},rebuildButton:function(){return!1},addPayPalButton:function(t,e){var n;if(!(n="string"==typeof(e=e||"#paypal-container")?$$(e):e))return console.error("Unable to locate container "+e+" for PayPal button."),!1;this.attachPayPalButtonEvent(n,t)},attachPayPalButtonEvent:function(r,a){var s=this;this.getClient(function(t){braintree.paypalCheckout.create({client:t},function(t,n){if(t)console.error("Error creating PayPal Checkout:",t);else for(var e,i=0;i<r.length;++i){e="paypal_button_"+this.getRandomQS(),r[i].id=e,r[i].className+=" paypalbtn-rendered";var o={env:a.env,commit:a.commit,style:a.style,funding:{allowed:[],disallowed:[]},payment:function(){return"function"==typeof a.events.validate&&!1===a.events.validate()?reject(new Error("Please select the required product options.")):n.createPayment(a.payment)},onAuthorize:function(t,e){return n.tokenizePayment(t).then(a.events.onAuthorize)},onCancel:function(){"function"==typeof a.events.onCancel&&a.events.onCancel()},onError:function(t){"function"==typeof a.events.onError&&a.events.onError()}};0<=a.funding.allowed.indexOf("credit")?o.funding.allowed.push(paypal.FUNDING.CREDIT):0<=a.funding.disallowed.indexOf("credit")&&o.funding.disallowed.push(paypal.FUNDING.CREDIT),0<=a.funding.allowed.indexOf("card")?o.funding.allowed.push(paypal.FUNDING.CARD):0<=a.funding.disallowed.indexOf("card")&&o.funding.disallowed.push(paypal.FUNDING.CARD),0<=a.funding.allowed.indexOf("elv")?o.funding.allowed.push(paypal.FUNDING.ELV):0<=a.funding.disallowed.indexOf("elv")&&o.funding.disallowed.push(paypal.FUNDING.ELV),r[i].getAttribute("data-style-layout")&&(o.style.layout=r[i].getAttribute("data-style-layout")),r[i].getAttribute("data-style-size")&&(o.style.size=r[i].getAttribute("data-style-size")),r[i].getAttribute("data-style-shape")&&(o.style.shape=r[i].getAttribute("data-style-shape")),r[i].getAttribute("data-style-color")&&(o.style.color=r[i].getAttribute("data-style-color")),s.renderPayPalBtn(Object.assign({},o),"#"+e)}}.bind(this))}.bind(this))},renderPayPalBtn:function(t,e){paypal.Button.render(t,e)},_buildOptions:function(){var t=this.additionalOptions.funding;return{env:this.additionalOptions.env,commit:!0,style:this.additionalOptions.buttonStyle,payment:{flow:this._getFlow(),amount:this.amount,currency:this.currency,enableShippingAddress:!1,shippingAddressEditable:!1,displayName:this.storeFrontName},funding:t}},_getFlow:function(){var t;return t=!0===this.singleUse?"checkout":"vault",null!==$("gene_braintree_paypal_store_in_vault")&&this.onlyVaultOnVault&&"vault"==t&&!$("gene_braintree_paypal_store_in_vault").checked&&(t="checkout"),t},_parseTransportAsJson:function(transport){return transport.responseJSON&&"object"==typeof transport.responseJSON?transport.responseJSON:transport.responseText?"object"==typeof JSON&&"function"==typeof JSON.parse?JSON.parse(transport.responseText):eval("("+transport.responseText+")"):{}},getRandomQS:function(){var t=999998*Math.random()+1;return Math.floor(t)}};