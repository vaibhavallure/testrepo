<script type="text/javascript">
    (function (window) {
        var OnilabGoogleCharts = function () {
                document.addEventListener('DOMContentLoaded', this._init.bind(this));
            },
            module = OnilabGoogleCharts.prototype;

        module._charts = [];
        module._elementIdToChartMap = [];
        module._chartData = [];
        module._canCreateChart = false;
        module._init = function () {
            google.charts.load('current', {'packages': ['corechart']});
            google.charts.setOnLoadCallback((function () {
                this._canCreateChart = true;
            }).bind(this));

            if (document.addEventListener) {
                window.addEventListener('resize', this.resizeCharts.bind(this));
            } else if (document.attachEvent) {
                window.attachEvent('onresize', this.resizeCharts.bind(this));
            } else {
                window.resize = this.resizeCharts.bind(this);
            }
            var elements = document.querySelectorAll('.tab-item-link');
            for (var i = 0; i < elements.length; i++) {
                elements[i].addEventListener('click', this.resizeCharts.bind(this));
            }
            document.dispatchEvent(new CustomEvent('onilab-google-charts-ready'));
        };

        module.createChart = function (elementId, columns, rows, options) {
            if (!this._canCreateChart) {
                setTimeout(this.createChart.bind(this, elementId, columns, rows, options), 100);
                return;
            }
            var element = document.getElementById(elementId);
            var data = new google.visualization.DataTable();
            for (var i = 0; i < columns.length; i++) {
                data.addColumn(columns[i][0], columns[i][1]);
            }
            data.addRows(rows);
            var index = this._charts.length;
            if (this._elementIdToChartMap[elementId]) {
                index = this._elementIdToChartMap[elementId];
            }
            this._elementIdToChartMap[elementId] = index;
            this._chartData[index] = [elementId, columns, rows, options];
            this._charts[index] = new google.visualization.AreaChart(element);
            this._charts[index].draw(data, options);
        };

        module.resizeCharts = function () {
            if (this._chartData) {
                for (var i = 0; i < this._chartData.length; i++) {
                    try {
                        this.createChart(this._chartData[i][0], this._chartData[i][1], this._chartData[i][2], this._chartData[i][3]);
                    } catch (e) {
                    }
                }
                return;
            }
            setTimeout(this.resizeCharts.bind(this), 50);
        };

        window.onilabGoogleCharts = new OnilabGoogleCharts;
    })(window);
</script>