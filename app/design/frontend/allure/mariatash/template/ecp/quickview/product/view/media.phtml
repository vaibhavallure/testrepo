<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */

/**
 * Product media data template
 *
 * @see Mage_Catalog_Block_Product_View_Media
 */
?>
<?php
$_product = $this->getProduct();
$childId = null;
if($_product->isConfigurable()){    
    $allowAttrs   = array();
    $allAtributes = $_product->getTypeInstance(true)->getConfigurableAttributes($_product);
    foreach ($allAtributes as $attribute) {
        $productAttribute = $attribute->getProductAttribute();
        $attrid = $productAttribute->getId();
        $allowAttrs[] = $productAttribute->getAttributeCode();         
    }
   
    
    $colorOptionId = $this->getRequest()->getParam("optionId",'');  
    
    $childProducts = Mage::getModel('catalog/product_type_configurable')->getUsedProducts(null, $_product);
    $config_attr = null;   
    if(count($allowAttrs) == 1){
        $config_attr = $allowAttrs[0];           
    }
    else{           
        $colors = Mage::getStoreconfig('ecp_color/color_attr');
        $colors = explode(",", $colors);
        foreach($colors as $code){
            if(in_array($code, $allowAttrs)){
                $config_attr = $code; 
                break;
            }
        }
        $realAttribute = @array_diff($config_attr,$colors);
        if(count($realAttribute)) $config_attr   = $realAttribute[0];            
    }
   
    if($colorOptionId){
        foreach($childProducts as $prod){     
            $method = 'get'.ucfirst($config_attr);
            $attribute_code = $prod->$method();                             
            if($colorOptionId == $attribute_code){
                $childId = $prod->getEntityId();
                break;
            }
        }
    }
    // Non color attribute
    else{
        foreach($childProducts as $prod){     
            $method = 'get'.ucfirst($config_attr);
            $attribute_code = $prod->$method();                             
            $colorOptionId  = $attribute_code;
            $childId = $prod->getEntityId();
            break;
        }        
    }
    
}

$_helper = $this->helper('catalog/output');
?>
<?php 
if($childId){
    $_product = Mage::getModel('catalog/product')->load($childId);    
}
$prodID = $_product->getEntityId();
?>
<div style="display: none;" id="current_option_id"><?php echo $colorOptionId ;?></div>
<script>
    jQuery.noConflict();  
    jQuery(document).ready(function(){
        jQuery('#downImagesQuickview .imageClass').each(function(){
            jQuery('#downImagesQuickview .imageClass').first().addClass('imageClass_hover');
            jQuery(this).hover(function(){
                jQuery('#downImagesQuickview .imageClass').removeClass('imageClass_hover');
                jQuery(this).addClass('imageClass_hover');
                var src = jQuery(this).attr('rel');               
                jQuery('.product-image-<?php echo $prodID;?> img').attr('src',src);
                return false;
            });
        });
    });
</script>
<input type="hidden" name="reloadmedia" id="reloadmedia" value="qv"/>
<p class="product-image-<?php echo $prodID;?> mainImg">
    <?php
        $_img = '<img src="'.$this->helper('catalog/image')->init($_product, 'image')->resize(392).'"/>';
        echo $_helper->productAttribute($_product, $_img, 'image');
    ?>
</p>
<?php if (count($_product->getMediaGalleryImages()) > 1): ?>
<div id="downImagesQuickview" class="more-views">
    <?php foreach ($_product->getMediaGalleryImages() as $_image):
        $imprime = $this->helper('catalog/image')->init($_product, 'image', $_image->getFile())->resize(392);
    ?>
    <a class="imageClass" href="#" rel="<?php echo $imprime;?>" title="<?php echo $this->htmlEscape($_image->getLabel()) ?>">
        <img src="<?php echo $this->helper('catalog/image')->init($_product, 'thumbnail', $_image->getFile())->resize(91,120); ?>" width="91px" height="120px" alt="<?php echo $this->htmlEscape($_image->getLabel()) ?>" />
    </a>
    <?php endforeach; ?>
</div>
<?php endif; ?>
<script type="text/javascript">   
    jQuery(document).ready(function(){
        var id = 'amconf-image-<?php echo $colorOptionId ;?>';        
        if($(id)){
            $(id).simulate('click');  
            jQuery('.qv-color_label').text(jQuery('#'+id).attr('alt'));
        }  
        /* Add tooltip for color icon*/
        jQuery('.amconf-images-container').each(function(){
                jQuery(this).find('img').each(function(){
                    var imgid  = jQuery(this).attr('id');  
                    var imgalt = jQuery(this).attr('alt'); 
                    Tipped.create(jQuery("#"+imgid), imgalt, {
                            skin: 'customTiny',
                            showOn: ['click', 'mouseover'],
                            background: { color: '#fff', opacity: .9 }
                        });
                });
            });   
         
        /* Attribute Post Length */
        if(jQuery('#attribute189').html()){
            var optionId = '<?php echo $colorOptionId;?>';            
            if(optionId){
                jQuery('#attribute189 option').each(function(){
                    if(jQuery(this).attr('value') == optionId){
                        $('attribute189').value = optionId;
                        $('attribute189').simulate('change');
                    }
                });
            }
        }
        
        jQuery(document).ready(function(){
            if(jQuery('.amconf-images-container').html()){
                var color_attribute_text = jQuery('.amconf-images-container').parent().find('label.required').text();                
                jQuery('.qv-attribute_label').text(color_attribute_text);
                jQuery('.amconf-images-container img').each(function(){
                    jQuery(this).click(function(){                        
                        jQuery('.qv-color_label').text(jQuery(this).attr('alt'));
                    });
                });
                
            }
        });
    });   
</script>
