<?php
if (!$this->isEnabledPdp()) {
    return;
}
?>

<script type="text/javascript">
    if (typeof Translator !== 'object' && typeof Translate == 'object') {
        var Translator = new Translate([]);
    }

    if (typeof Translator === 'object') {
        Translator.add({
            "We were unable to complete the request. Please try again.": "<?php echo $this->__('We were unable to complete the request. Please try again.'); ?>",
            "Checkout with PayPal": "<?php echo $this->__("Checkout with PayPal"); ?>"
        })
    }

    // Override the setStockData function to exclude our PayPal button
    if (typeof Product.ConfigurableSwatches === 'function') {
        var originSetStockData = Product.ConfigurableSwatches.prototype.setStockData;
        Product.ConfigurableSwatches.prototype.setStockData = function () {
            originSetStockData.apply(this, arguments);

            this._E.cartBtn.btn = $$('.add-to-cart button.button:not([data-paypalexpress]):not(.not-btn-cart)');
        };
    }

    (function () {
        document.observe("dom:loaded", function() {
            var express = new BraintreePayPalExpress(
                false,
                '<?php echo Mage::app()->getStore()->getFrontendName(); ?>',
                '<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>',
                'product',
                {
                    clientTokenUrl: '<?php echo $this->getUrl('braintree/checkout/clientToken') ?>',
                    authUrl:        '<?php echo $this->getUrl('braintree/express/authorization') ?>',
                    shippingSaveUrl:'<?php echo $this->getUrl('braintree/express/saveShipping') ?>',
                    couponSaveUrl:  '<?php echo $this->getUrl('braintree/express/saveCoupon') ?>',
                    successUrl:     '<?php echo $this->getUrl("checkout/onepage/success"); ?>',
                },
                {
                    locale:         '<?php echo strtolower($this->getStoreLocale()); ?>',
                    token:          '<?php echo $this->getToken(); ?>',
                    productId:      <?php echo (int) $this->getProduct()->getId(); ?>,
                    singleUse:      <?php echo $this->getSingleUse(); ?>
                }
            );
            express.attachToButtons($$('[data-paypalexpress]'));

            // Expose the ppExpress object to the window for backwards compatibility
            window.ppExpress = express;
        });
    })();
</script>