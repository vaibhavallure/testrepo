# git Security
RewriteRule ^(.git) - [R=404,L]

############################################
## uncomment these lines for CGI mode
## make sure to specify the correct cgi php binary file name
## it might be /cgi-bin/php-cgi

#    Action php5-cgi /cgi-bin/php5-cgi
#    AddHandler php5-cgi .php

############################################
## GoDaddy specific options

   Options -MultiViews -Indexes

## you might also need to add this line to php.ini
##     cgi.fix_pathinfo = 1
## if it still doesn't work, rename php.ini to php5.ini

############################################
## this line is specific for 1and1 hosting

    #AddType x-mapp-php5 .php
    #AddHandler x-mapp-php5 .php

############################################
## default index file

    DirectoryIndex index.php

<IfModule mod_php5.c>

############################################
## adjust memory limit

    php_value memory_limit 4096M
    php_value max_execution_time 180000

############################################
## disable magic quotes for php request vars

    php_flag magic_quotes_gpc off

############################################
## disable automatic session start
## before autoload was initialized

    php_flag session.auto_start off

############################################
## enable resulting html compression

    #php_flag zlib.output_compression on

###########################################
# disable user agent verification to not break multiple image upload

    php_flag suhosin.session.cryptua off

###########################################
# turn off compatibility with PHP4 when dealing with objects

    php_flag zend.ze1_compatibility_mode Off

</IfModule>

<IfModule mod_security.c>
###########################################
# disable POST processing to not break multiple image upload

    SecFilterEngine Off
    SecFilterScanPOST Off
</IfModule>

<IfModule mod_deflate.c>

	############################################
	## enable apache served files compression
	## http://developer.yahoo.com/performance/rules.html#gzip

    # Insert filter on all content
    ###SetOutputFilter DEFLATE
    # Insert filter on selected content types only
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript

    # Netscape 4.x has some problems...
    BrowserMatch ^Mozilla/4 gzip-only-text/html

    # Netscape 4.06-4.08 have some more problems
    BrowserMatch ^Mozilla/4\.0[678] no-gzip

    # MSIE masquerades as Netscape, but it is fine
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

    # Don't compress images
    SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip dont-vary

    # Make sure proxies don't deliver the wrong content
    Header append Vary User-Agent env=!dont-vary

</IfModule>

<IfModule mod_ssl.c>

############################################
## make HTTPS env vars available for CGI mode

    SSLOptions StdEnvVars

</IfModule>

<IfModule mod_rewrite.c>

############################################
## enable rewrites

    Options +FollowSymLinks
    RewriteEngine on

############################################
## you can put here your magento root folder
## path relative to web root

    #RewriteBase /magento/

############################################
## uncomment next line to enable light API calls processing

    RewriteRule ^api/([a-z][0-9a-z_]+)/?$ api.php?type=$1 [QSA,L]

############################################
## rewrite API2 calls to api.php (by now it is REST only)

    RewriteRule ^api/rest api.php?type=rest [QSA,L]

############################################

	RewriteCond %{HTTPS} off
	RewriteCond %{HTTP_HOST} ^venusbymariatash\.com$
	RewriteRule ^ https://venusbymariatash.com%{REQUEST_URI} [L,R=301,NE]

	RewriteCond %{HTTPS} off
	RewriteCond %{HTTP_HOST} ^www\.venusbymariatash\.com$
	RewriteRule ^ https://www.venusbymariatash.com%{REQUEST_URI} [L,R=301,NE]

	RewriteCond %{HTTPS} off
	RewriteCond %{HTTP_HOST} ^mariatash\.com$
	RewriteRule ^ https://mariatash.com%{REQUEST_URI} [L,R=301,NE]

	RewriteCond %{HTTPS} off
	RewriteCond %{HTTP_HOST} ^www\.mariatash\.com$
	RewriteRule ^ https://www.mariatash.com%{REQUEST_URI} [L,R=301,NE]

	RewriteCond %{HTTPS} on
	RewriteCond %{HTTP_HOST} ^(?:www\.)?venusbymariatash\.com$
	RewriteRule ^ https://www.mariatash.com%{REQUEST_URI} [L,R=302,NE]

	RewriteCond %{HTTP_HOST} ^mariatash\.com$
	RewriteRule ^ https://www.mariatash.com%{REQUEST_URI} [L,R=302,NE]

############################################################

## workaround for HTTP authorization
## in CGI environment

	RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

############################################
## TRACE and TRACK HTTP methods disabled to prevent XSS attacks

	RewriteCond %{REQUEST_METHOD} ^TRAC[EK]
	RewriteRule .* - [L,R=405]

<IfModule mod_setenvif.c>
    <IfModule mod_headers.c>
		Header set X-Developed-By "Allure Software, Inc."

		Header set Referrer-Policy: same-origin

        # X-Content-Type-Options: nosniff disable content-type sniffing on some browsers.
        Header set X-Content-Type-Options: nosniff

        # Only allow my site to frame itself
		#Header always set X-Frame-Options "sameorigin"
		#Header always append X-Frame-Options ALLOW-FROM=https://www.facebook.com/
		#Header always append X-Frame-Options ALLOW-FROM=https://staticxx.facebook.com/
		#Header always set X-Frame-Options "allow-from https://www.facebook.com/"
		#Header always set X-Frame-Options "allow-from https://staticxx.facebook.com/"

		# Content Security Policy
        Header always set Content-Security-Policy "default-src https: 'unsafe-eval' 'unsafe-inline' wss://*.zopim.com https://fls-ns.amazon.com https://payments.amazon.com; frame-src 'self' https://*.facebook.com; script-src 'self' 'unsafe-eval' https://www.youtube.com https://*.pinterest.com https://*.twitter.com https://*.payments-amazon.com https://*.amazon.com https://s.ytimg.com  https://*.nr-data.net https://www.gstatic.com https://www.google-analytics.com https://www.googleadservices.com https://static.hotjar.com https://*.newrelic.com https://d1igp3oop3iho5.cloudfront.net https://www.searchanise.com https://connect.facebook.net https://*.g.doubleclick.net https://script.hotjar.com https://snisecdn-feh571kz.stackpathdns.com https://*.zopim.com wss://*.zopim.com https://*.zopim.org https://*.zopim.io 'unsafe-inline'"

        # Only connect to this site via HTTPS for the two years (recommended)
        Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

        ############################################
        # This header forces to enables the Cross-site scripting (XSS) filter in browsers (if disabled)
        BrowserMatch \bMSIE\s8 ie8
        Header set X-XSS-Protection: "1; mode=block" env=!ie8

    </IfModule>
</IfModule>

############################################
## redirect for mobile user agents

    #RewriteCond %{REQUEST_URI} !^/mobiledirectoryhere/.*$
    #RewriteCond %{HTTP_USER_AGENT} "android|blackberry|ipad|iphone|ipod|iemobile|opera mobile|palmos|webos|googlebot-mobile" [NC]
    #RewriteRule ^(.*)$ /mobiledirectoryhere/ [L,R=302]

############################################
## always send 404 on missing files in these folders

    RewriteCond %{REQUEST_URI} !^/(media|skin|js)/

############################################
## never rewrite for existing files, directories and links

    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-l

############################################
## rewrite everything else to index.php

    RewriteRule .* index.php [L]

</IfModule>


############################################
## Prevent character encoding issues from server overrides
## If you still have problems, use the second line instead

    AddDefaultCharset Off
    #AddDefaultCharset UTF-8

<IfModule mod_expires.c>

############################################
## Add default Expires header
## http://developer.yahoo.com/performance/rules.html#expires

    ExpiresDefault "access plus 1 year"

</IfModule>

############################################
## By default allow all access

    Order allow,deny
    Allow from all

###########################################
## Deny access to release notes to prevent disclosure of the installed Magento version

    <Files RELEASE_NOTES.txt>
        order allow,deny
        deny from all
    </Files>

############################################
## If running in cluster environment, uncomment this
## http://developer.yahoo.com/performance/rules.html#etags

    #FileETag none

###########################################
## Deny access to cron.php
    <Files cron.php>

############################################
## uncomment next lines to enable cron access with base HTTP authorization
## http://httpd.apache.org/docs/2.2/howto/auth.html
##
## Warning: .htpasswd file should be placed somewhere not accessible from the web.
## This is so that folks cannot download the password file.
## For example, if your documents are served out of /usr/local/apache/htdocs
## you might want to put the password file(s) in /usr/local/apache/.

        #AuthName "Cron auth"
        #AuthUserFile ../.htpasswd
        #AuthType basic
        #Require valid-user

############################################

        Order allow,deny
        Deny from all

    </Files>
